<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://petriflow.com/petriflow.schema.xsd">
	<id>transformation_from_er</id>
	<initials>TER</initials>
	<title>Transformation from ER</title>
	<icon>device_hub</icon>
	<defaultRole>true</defaultRole>
	<anonymousRole>true</anonymousRole>
	<transitionRole>false</transitionRole>
	<caseName>Transformácia domény</caseName>
	<data type="fileList">
		<id>import_files</id>
		<title>Vstupné súbory</title>
		<placeholder>Zadajte XML doménového modelu</placeholder>
	</data>
	<data type="fileList">
		<id>download_files</id>
		<title>Súbory na stiahnutie</title>
	</data>
	<data type="i18n">
		<id>divider</id>
		<title/>
		<component>
			<name>divider</name>
		</component>
	</data>
	<data type="button">
		<id>button_generate</id>
		<title/>
		<placeholder>Generovať</placeholder>
		<component>
			<name>flat</name>
		</component>
	</data>
	<data type="i18n">
		<id>process_title</id>
		<title/>
		<component>
			<name>divider</name>
		</component>
	</data>
	<data type="taskRef">
		<id>generated_taskRef</id>
		<title/>
	</data>
	<data type="enumeration_map">
		<id>processes_map</id>
		<title>Procesy</title>
	</data>
	<data type="button">
		<id>button_create_process</id>
		<title/>
		<placeholder>Vytvoriť prípad</placeholder>
		<component>
			<name>flat</name>
		</component>
	</data>
	<transition>
		<id>import_export_trans</id>
		<x>300</x>
		<y>140</y>
		<label>Import/Export</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>default</id>
			<logic>
				<perform>true</perform>
				<assign>true</assign>
				<delegate>false</delegate>
				<cancel>false</cancel>
			</logic>
		</roleRef>
		<dataGroup>
			<id>import_export_trans_0</id>
			<cols>4</cols>
			<layout>grid</layout>
			<dataRef>
				<id>import_files</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>3</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>download_files</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>2</y>
					<rows>1</rows>
					<cols>3</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>divider</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>button_generate</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>3</x>
					<y>1</y>
					<rows>1</rows>
					<cols>1</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
				<event type="set">
					<id>button_generate_set</id>
					<actions phase="post">
						<action>
							trans: t.this,
							download_files: f.download_files,
							import_files: f.import_files,
							processes_map: f.processes_map;

							def transformedFiles = domainTransformService.transformFiles(import_files)

							change download_files value { transformedFiles }
							make download_files, visible on trans when { true }
						</action>
					</actions>
				</event>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>import_export_trans_assign</id>
		</event>
		<event type="finish">
			<id>import_export_trans_finish</id>
			<title>Ďalej</title>
			<actions phase="pre">
				<action>
					download_files: f.download_files,
					processes_map: f.processes_map;

					def processes = download_files.value
					def processMap = [:]

					if (processes == null) {
						throw new IllegalArgumentException("Neboli zadané žiadne vstupné súbory")
					}

					processes.namesPaths.each {
						def name = it.name.replace(".xml", "")
						processMap.put(name.toString(), name.toString())
					}

					change processes_map value { "" }
					change processes_map options { processMap }
				</action>
			</actions>
		</event>
		<event type="cancel">
			<id>import_export_trans_cancel</id>
			<title/>
		</event>
		<event type="delegate">
			<id>import_export_trans_delegate</id>
			<title/>
		</event>
	</transition>
	<transition>
		<id>generated_process_trans</id>
		<x>420</x>
		<y>260</y>
		<label>Generovaný proces</label>
		<assignPolicy>auto</assignPolicy>
		<roleRef>
			<id>default</id>
			<logic>
				<perform>true</perform>
				<assign>true</assign>
				<delegate>false</delegate>
				<cancel>false</cancel>
			</logic>
		</roleRef>
		<dataGroup>
			<id>generated_process_trans_0</id>
			<cols>4</cols>
			<layout>grid</layout>
			<dataRef>
				<id>process_title</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>4</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>generated_taskRef</id>
				<logic>
					<behavior>hidden</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>2</y>
					<rows>1</rows>
					<cols>4</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>processes_map</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>3</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>button_create_process</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>3</x>
					<y>0</y>
					<rows>1</rows>
					<cols>1</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
				<event type="set">
					<id>button_create_process_set</id>
					<actions phase="post">
						<action>
							trans: t.this,
							process_title: f.process_title,
							generated_taskRef: f.generated_taskRef,
							processes_map: f.processes_map;

							def chosenNet = processes_map.value

							if (chosenNet == null || chosenNet == "") {
								throw new IllegalArgumentException("Nebol zvolený proces")
							}

							def createdCase = createCase(chosenNet)

							change generated_taskRef value { [createdCase.tasks.find { it.transition == "generic_transition" }?.task] }
							change process_title value { new com.netgrif.application.engine.petrinet.domain.I18nString(createdCase.petriNet.title) }

							make process_title, visible on trans when { true }
							make generated_taskRef, editable on trans when { true }
						</action>
					</actions>
				</event>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>generated_process_trans_assign</id>
			<title/>
		</event>
		<event type="finish">
			<id>generated_process_trans_finish</id>
			<title>Import ďalších modelov</title>
			<actions phase="pre">
				<action>
					trans: t.import_export_trans,
					trans2: t.this,
					import_files: f.import_files,
					download_files: f.download_files,
					process_title: f.process_title,
					generated_taskRef: f.generated_taskRef,
					processes_map: f.processes_map;

					change import_files value { null }
					change download_files value { null }
					make download_files, hidden on trans when { true }
					make process_title, hidden on trans2 when { true }
					change generated_taskRef value { [] }
					change processes_map value { [:] }
				</action>
			</actions>
		</event>
		<event type="cancel">
			<id>generated_process_trans_cancel</id>
			<title/>
		</event>
		<event type="delegate">
			<id>generated_process_trans_delegate</id>
			<title/>
		</event>
	</transition>
	<place>
		<id>p1</id>
		<x>180</x>
		<y>140</y>
		<tokens>1</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p2</id>
		<x>420</x>
		<y>140</y>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>p3</id>
		<x>580</x>
		<y>260</y>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<arc>
		<id>a1</id>
		<type>regular</type>
		<sourceId>p1</sourceId>
		<destinationId>import_export_trans</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a2</id>
		<type>regular</type>
		<sourceId>import_export_trans</sourceId>
		<destinationId>p2</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a4</id>
		<type>regular</type>
		<sourceId>generated_process_trans</sourceId>
		<destinationId>p3</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a14</id>
		<type>regular</type>
		<sourceId>p2</sourceId>
		<destinationId>generated_process_trans</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>a17</id>
		<type>regular</type>
		<sourceId>generated_process_trans</sourceId>
		<destinationId>p1</destinationId>
		<multiplicity>1</multiplicity>
		<breakpoint>
			<x>180</x>
			<y>260</y>
		</breakpoint>
	</arc>
</document>